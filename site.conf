-- This is an example site configuration for Gluon v2018.2.2
--
-- Take a look at the documentation located at
-- https://gluon.readthedocs.io/ for details.
--
-- This configuration will not work as is. You're required to make
-- community specific changes to it!
{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  hostname_prefix = 'ffbsee-',

  -- Name of the community.
  site_name = 'Freifunk Bodensee',

  -- Shorthand of the community.
  site_code = 'ffbsee',

  -- 32 bytes of random data, encoded in hexadecimal
  -- This data must be unique among all sites and domains!
  -- Can be generated using: echo $(hexdump -v -n 32 -e '1/1 "%02x"' </dev/urandom)
  domain_seed = '13d0ffb5ee03019b1c30b59ecaf43b0bb2b33218c8e80505fee0fb297ddc1c4f',

  -- Prefixes used within the mesh.
  -- prefix6 is required, prefix4 can be omitted if next_node.ip4
  -- is not set.
  prefix4 = '10.15.224.0/20',
  prefix6 = 'fdef:1701:b5ee:23::/64',

  -- Timezone of your community.
  -- See https://openwrt.org/docs/guide-user/base-system/system_configuration#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {'de.pool.ntp.org'},

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,

    -- List of supported wifi rates (optional)
    -- Example removes 802.11b compatibility for better performance
    supported_rates = {6000, 9000, 12000, 18000, 24000, 36000, 48000, 54000},

    -- List of basic wifi rates (optional, required if supported_rates is set)
    -- Example removes 802.11b compatibility for better performance
    basic_rate = {6000, 9000, 18000, 36000, 54000},

    -- ESSID used for client network.
    ap = {
      ssid = 'Freifunk',
      -- disabled = true, -- (optional)
    },

    mesh = {
      -- Adjust these values!
      id = 'ffbsee_mesh5', -- usually you don't want users to connect to this mesh-SSID, so use a cryptic id that no one will accidentally mistake for the client WiFi
      mcast_rate = 12000,
      -- disabled = true, -- (optional)
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel.
  wifi5 = {
    channel = 36,
    ap = {
      ssid = 'Freifunk',
    },
    mesh = {
      -- Adjust these values!
      id = 'ffbsee_mesh5',
      mcast_rate = 12000,
    },
  },

  mesh = {
    vxlan = true,
    batman_adv = {
      routing_algo = 'BATMAN_V',
      gw_sel_class = 1,
    },
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    -- name = { 'nextnode.location.community.example.org', 'nextnode', 'nn' },
    ip4 = '10.15.239.127',
    ip6 = 'fdef:1701:b5ee:23::0',
  },

  -- Options specific to routing protocols (optional)
  -- mesh = {
    -- Options specific to the batman-adv routing protocol (optional)
    -- batman_adv = {
      -- Gateway selection class (optional)
      -- The default class 20 is based on the link quality (TQ) only,
      -- class 1 is calculated from both the TQ and the announced bandwidth
      -- gw_sel_class = 1,
    -- },
  -- },

  mesh_vpn = {
    enabled = true,
    -- mtu = 1312,
    mtu = 1406,

    fastd = {
      -- Refer to https://fastd.readthedocs.io/en/latest/ to better understand
      -- what these options do.

      -- List of crypto-methods to use.
      methods = {'salsa2012+umac'},
      -- configurable = true,
      -- syslog_level = 'warn',

      groups = {
        backbone = {
          -- Limit number of connected peers to reduce bandwidth.
          limit = 1,

          -- List of peers.
          peers = {
            peer1 = {
              key = '7fa0b1bc37f77607ad273dbdcfd6a7a6f0c62139c969c68b1b0ce50ebaf86ce5',

              -- This is a list, so you might add multiple entries.
              remotes = {'ipv6 "speedtest5.gw01.ffbsee.net" port 1250', 'ipv4 "speedtest5.gw01.ffbsee.net" port 1250'}
            },
            peer2 = {
              key = '29e965b4c8cf4ccf1d2387010965d0d4fa6d2713148c9d95730ffa0e9dfadc2e',
              -- You can also omit the ipv4 to allow both connection via ipv4 and ipv6
              remotes = {'ipv6 "speedtest5.gw02.ffbsee.net" port 1250', 'ipv4 "speedtest5.gw02.ffbsee.net" port 1250'}
            },
            peer3 = {
              key = 'b59baed600c244df6b7f58d994958d53553828f7ad37bdac8a8be207af5ca5f8',
              -- You can also omit the ipv4 to allow both connection via ipv4 and ipv6
              remotes = {'ipv6 "speedtest5.gw03.ffbsee.net" port 1250', 'ipv4 "speedtest5.gw03.ffbsee.net" port 1250'}
            },
            peer4 = {
              key = 'ab46cf23a48111d46451e32a60c18784ec47b903a5ae7c8df1c1ca38f73857fb',
              -- You can also omit the ipv4 to allow both connection via ipv4 and ipv6
              remotes = {'ipv6 "speedtest5.gw04.ffbsee.net" port 1250', 'ipv4 "speedtest5.gw04.ffbsee.net" port 1250'}
            },
          },

          -- Optional: nested peer groups
          -- groups = {
            -- backbone_sub = {
              -- ...
            -- },
          -- ...
          -- },
        },
        -- Optional: additional peer groups, possibly with other limits
        -- backbone2 = {
          -- ...
        -- },
      },
    },

    bandwidth_limit = {
      -- The bandwidth limit can be enabled by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      egress = 2000,

      -- Default download limit (kbit/s).
      ingress = 30000,
    },
  },

  autoupdater = {
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'stable',

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        -- name = 'stable',
        name = 'v2018.2.x',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {'http://[fdef:1701:b5ee:23::42]/freifunk/firmware/autoupdater/gluon'},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 2,

        -- List of public keys of maintainers.
        pubkeys = {
            '9917fc356c2d9dbbcef05e94db5c69e7add4383c339355d5a2f48af64d707f4e', -- mart
            '6e3d9c98e4f7f9139c01f99b539dce45a9339f10774d2a57095822dbc7e68d4a', -- l3d
            '4bc8902befbf3f3d4c308caad02cc1efd32e0309837c9fae9f1a264e47f7faee', -- Xperimental
            'eb00dd3606a4b7d724d308763a175ec755a73025874d90b373e598f427e7f998' -- Byt3
        },
      },
    },
  },
}
